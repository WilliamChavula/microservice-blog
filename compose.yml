services:
  microservice-db:
    image: postgres:17-alpine3.20
    container_name: api-db
    restart: always
    shm_size: 128mb
    ports:
      - "5678:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./volumes/postgres-db:/var/lib/postgresql/data
      - ./scripts:/docker-entrypoint-initdb.d

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-container
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-container
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-container:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0

  auth-api-img:
    container_name: auth-api-container
    restart: always
    env_file: ./auth-api/.env
    depends_on:
      - microservice-db
    build:
      context: ./auth-api
      dockerfile: Dockerfile
    ports:
      - "7500:7500"
    volumes:
      - ./auth-api:/api/auth-api
      - /api/auth-api/node_modules #  container manages its own node_modules. Fix esbuild architecture mismatch between container & host.
    command: pnpm dev

  posts-api-img:
    container_name: posts-api-container
    restart: always
    env_file: ./posts-api/.env
    depends_on:
      - microservice-db
    build:
      context: ./posts-api
      dockerfile: Dockerfile
    ports:
      - "7600:7600"
    volumes:
      - ./posts-api:/api/posts-api
      - /api/posts-api/node_modules
    command: pnpm dev:tsx

  authorization-api-img:
    container_name: authorization-api-container
    restart: always
    env_file: ./authorization-api/.env
    build:
      context: ./authorization-api
      dockerfile: Dockerfile
    ports:
      - "7700:7700"
    volumes:
      - ./authorization-api:/api/authorization-api
      - /api/authorization-api/node_modules
    command: pnpm dev
